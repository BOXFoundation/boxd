// Copyright (c) 2018 ContentBox Authors. 
// Use of this source code is governed by a MIT-style 
// license that can be found in the LICENSE file.

syntax = "proto3";
package rpcpb;

import "github.com/BOXFoundation/boxd/core/pb/block.proto";
import "google/api/annotations.proto";
import "common.proto";

service TransactionCommand {
    rpc ListUtxos(ListUtxosRequest) returns (ListUtxosResponse) {
        option (google.api.http) = {
            post: "/v1/tx/listutxos"
            body: "*"
        };
    }

    rpc FundTransaction(FundTransactionRequest) returns (ListUtxosResponse) {
        option (google.api.http) = {
            post: "/v1/tx/fundtransaction"
            body: "*"
        };
    }

    rpc SendTransaction(SendTransactionRequest) returns (BaseResponse) {
        option (google.api.http) = {
            post: "/v1/tx/sendtransaction"
            body: "*"
        };
    }

    rpc GetRawTransaction(GetRawTransactionRequest) returns (GetRawTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/tx/getrawtransaction"
            body: "*"
        };
    }

    rpc GetBalance(GetBalanceRequest) returns (GetBalanceResponse) {
        option (google.api.http) = {
            post: "/v1/tx/getbalance"
            body: "*"
        };
    }

    rpc GetTokenBalance(GetTokenBalanceRequest) returns (GetTokenBalanceResponse) {
        option (google.api.http) = {
            post: "/v1/tx/gettokenbalance"
            body: "*"
        };
    }

    rpc GetFeePrice(GetFeePriceRequest) returns (GetFeePriceResponse) {
        option (google.api.http) = {
            post: "/v1/tx/getfeeprice"
            body: "*"
        };
    }

    rpc GetTransactionPool(GetTransactionPoolRequest) returns (GetTransactionsResponse) {
        option (google.api.http) = {
            post: "/v1/tx/gettxpool"
            body: "*"
        };
    }
}

message ListUtxosRequest {
}

message GetRawTransactionRequest {
    bytes hash = 1;
}
message GetRawTransactionResponse {
    corepb.Transaction tx = 1;
}

message GetTransactionPoolRequest {

}

message GetTransactionsResponse {
    repeated corepb.Transaction txs = 1;
}

message TokenAmount{
    corepb.OutPoint token = 1;
    uint64 amount = 2;
}

message FundTransactionRequest {
    string addr = 1;
    uint64 amount = 2;
    repeated TokenAmount tokenBudgets= 3;
}

message SendTransactionRequest {
    corepb.Transaction tx = 1;
}

message ListUtxosResponse {
    int32 code = 1;
    string message = 2;
    uint32 count = 3;
    repeated Utxo utxos = 4;
}

message GetBalanceRequest {
    repeated string addrs = 1;
}

message GetBalanceResponse {
    int32 code = 1;
    string message = 2;
    map<string, uint64> balances = 3;
}

message GetTokenBalanceRequest {
    repeated string addrs = 1;
    corepb.OutPoint token = 2;
}

message GetTokenBalanceResponse {
    int32 code = 1;
    string message = 2;
    map<string, uint64> balances = 3;
}

message GetFeePriceRequest{
}

message GetFeePriceResponse {
    uint64 box_per_byte = 1;
}
